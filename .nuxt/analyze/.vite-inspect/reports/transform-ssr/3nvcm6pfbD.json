{
  "resolvedId": "C:/Users/lamthp/Documents/NUXT/godvinkaup/composables/useFetchWines.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "export default async (filters) => {\r\n  const {data, error, refresh} = await useFetch('/api/wines/wine', {\r\n    params: {\r\n      ...filters,\r\n    },\r\n  });\r\n\r\n  \r\n  if(error.value) {\r\n    throw createError({\r\n      ...error.value,\r\n      statusMessage: \"Unable to fetch data\"\r\n    })\r\n  }\r\n\r\n\r\n  return {data, refresh};\r\n};",
      "start": 1708335745198,
      "end": 1708335745288,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1708335745288,
      "end": 1708335745288,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1708335745288,
      "end": 1708335745288,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1708335745288,
      "end": 1708335745288,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1708335745288,
      "end": 1708335745288,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1708335745288,
      "end": 1708335745288,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1708335745288,
      "end": 1708335745288,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1708335745288,
      "end": 1708335745288,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1708335745288,
      "end": 1708335745288,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1708335745288,
      "end": 1708335745288,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1708335745288,
      "end": 1708335745288,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1708335745288,
      "end": 1708335745288,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708335745288,
      "end": 1708335745288,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708335745288,
      "end": 1708335745288,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1708335745288,
      "end": 1708335745288,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1708335745288,
      "end": 1708335745288,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708335745288,
      "end": 1708335745288,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1708335745288,
      "end": 1708335745288,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708335745288,
      "end": 1708335745288,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1708335745288,
      "end": 1708335745288,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1708335745288,
      "end": 1708335745288,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1708335745288,
      "end": 1708335745288,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1708335745288,
      "end": 1708335745288,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1708335745288,
      "end": 1708335745288,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1708335745288,
      "end": 1708335745288,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1708335745288,
      "end": 1708335745288,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1708335745288,
      "end": 1708335745288,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1708335745288,
      "end": 1708335745288,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "result": "export default async (filters) => {\r\n  const {data, error, refresh} = await useFetch('/api/wines/wine', {\r\n    params: {\r\n      ...filters,\r\n    },\r\n  }, '$24Kif7eIWn');\r\n\r\n  \r\n  if(error.value) {\r\n    throw createError({\r\n      ...error.value,\r\n      statusMessage: \"Unable to fetch data\"\r\n    })\r\n  }\r\n\r\n\r\n  return {data, refresh};\r\n};",
      "start": 1708335745288,
      "end": 1708335745289,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,gBAAC,CAAC,CAAC,CAAC;AACN,CAAC;AACD,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC;AACD,CAAC;AACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC"
      }
    },
    {
      "name": "nuxt:composable-keys",
      "result": "export default async (filters) => {\r\n  const {data, error, refresh} = await useFetch('/api/wines/wine', {\r\n    params: {\r\n      ...filters,\r\n    },\r\n  }, '$24Kif7eIWn');\r\n\r\n  \r\n  if(error.value) {\r\n    throw createError({\r\n      ...error.value,\r\n      statusMessage: \"Unable to fetch data\"\r\n    })\r\n  }\r\n\r\n\r\n  return {data, refresh};\r\n};",
      "start": 1708335745288,
      "end": 1708335745289,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,gBAAC,CAAC,CAAC,CAAC;AACN,CAAC;AACD,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC;AACD,CAAC;AACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC"
      }
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { useFetch } from '#app/composables/fetch';\nimport { createError } from '#app/composables/error';\nexport default async (filters) => {\r\n  const {data, error, refresh} = await useFetch('/api/wines/wine', {\r\n    params: {\r\n      ...filters,\r\n    },\r\n  }, '$24Kif7eIWn');\r\n\r\n  \r\n  if(error.value) {\r\n    throw createError({\r\n      ...error.value,\r\n      statusMessage: \"Unable to fetch data\"\r\n    })\r\n  }\r\n\r\n\r\n  return {data, refresh};\r\n};",
      "start": 1708335745289,
      "end": 1708335745289,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC;AACD,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC;AACD,CAAC;AACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC"
      }
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { useFetch } from '#app/composables/fetch';\nimport { createError } from '#app/composables/error';\nexport default async (filters) => {\r\n  const {data, error, refresh} = await useFetch('/api/wines/wine', {\r\n    params: {\r\n      ...filters,\r\n    },\r\n  }, '$24Kif7eIWn');\r\n\r\n  \r\n  if(error.value) {\r\n    throw createError({\r\n      ...error.value,\r\n      statusMessage: \"Unable to fetch data\"\r\n    })\r\n  }\r\n\r\n\r\n  return {data, refresh};\r\n};",
      "start": 1708335745289,
      "end": 1708335745289,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC;AACD,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC;AACD,CAAC;AACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1708335745289,
      "end": 1708335745289,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1708335745289,
      "end": 1708335745289,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1708335745289,
      "end": 1708335745289,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1708335745289,
      "end": 1708335745289,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1708335745289,
      "end": 1708335745289,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1708335745289,
      "end": 1708335745289,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1708335745289,
      "end": 1708335745289,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1708335745289,
      "end": 1708335745290,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1708335745290,
      "end": 1708335745290,
      "order": "normal"
    }
  ]
}
